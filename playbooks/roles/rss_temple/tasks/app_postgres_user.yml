---
- name: Check if '{{ rss_temple__app_postgres_user }}' Postgres User already exists
  ansible.builtin.command:
    chdir: '{{ _rss_temple__absolute_service_path }}'
    argv:
      - docker
      - compose
      - exec
      - -e
      - PGPASSWORD={{ _rss_temple__postgres_admin_password | quote }}
      - '{{ rss_temple__app_docker_service_prefix }}postgresql'
      - psql
      - -U
      - '{{ rss_temple__postgres_admin_user }}'
      - -c
      - "SELECT 1 FROM pg_roles WHERE rolname='{{ rss_temple__app_postgres_user }}'"
      - '{{ rss_temple__postgres_name }}'
  become: true
  changed_when: false
  register: _rss_temple__django_user_exists_ret

- ansible.builtin.set_fact:
    _rss_temple__django_user_exists: "{{ '1' in _rss_temple__django_user_exists_ret.stdout }}"

- name: Create '{{ rss_temple__app_postgres_user }}' Postgres User
  ansible.builtin.command:
    chdir: '{{ _rss_temple__absolute_service_path }}'
    argv:
      - docker
      - compose
      - exec
      - -e
      - PGPASSWORD={{ _rss_temple__postgres_admin_password | quote }}
      - '{{ rss_temple__app_docker_service_prefix }}postgresql'
      - psql
      - -U
      - '{{ rss_temple__postgres_admin_user }}'
      - -c
      - "CREATE USER {{ rss_temple__app_postgres_user }} WITH PASSWORD '{{ _rss_temple__app_postgres_password }}'"
      - '{{ rss_temple__postgres_name }}'
  become: true
  changed_when: true
  when: not _rss_temple__django_user_exists

- name: Alter Default Privileges to ALL for '{{ rss_temple__app_postgres_user }}'
  ansible.builtin.command:
    chdir: '{{ _rss_temple__absolute_service_path }}'
    argv:
      - docker
      - compose
      - exec
      - -e
      - PGPASSWORD={{ _rss_temple__postgres_admin_password | quote }}
      - '{{ rss_temple__app_docker_service_prefix }}postgresql'
      - psql
      - -U
      - '{{ rss_temple__postgres_admin_user }}'
      - -c
      - 'ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON TABLES TO {{ rss_temple__app_postgres_user }}'
      - '{{ rss_temple__postgres_name }}'
  become: true
  changed_when: true
  when: not _rss_temple__django_user_exists

- name: Grant ALL Privileges on existing tables to '{{ rss_temple__app_postgres_user }}'
  ansible.builtin.command:
    chdir: '{{ _rss_temple__absolute_service_path }}'
    argv:
      - docker
      - compose
      - exec
      - -e
      - PGPASSWORD={{ _rss_temple__postgres_admin_password | quote }}
      - '{{ rss_temple__app_docker_service_prefix }}postgresql'
      - psql
      - -U
      - '{{ rss_temple__postgres_admin_user }}'
      - -c
      - 'GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO {{ rss_temple__app_postgres_user }}'
      - '{{ rss_temple__postgres_name }}'
  become: true
  changed_when: true
  when: not _rss_temple__django_user_exists

- name: Grant ALL on schema to '{{ rss_temple__app_postgres_user }}'
  ansible.builtin.command:
    chdir: '{{ _rss_temple__absolute_service_path }}'
    argv:
      - docker
      - compose
      - exec
      - -e
      - PGPASSWORD={{ _rss_temple__postgres_admin_password | quote }}
      - '{{ rss_temple__app_docker_service_prefix }}postgresql'
      - psql
      - -U
      - '{{ rss_temple__postgres_admin_user }}'
      - -c
      - 'GRANT ALL ON SCHEMA public TO {{ rss_temple__app_postgres_user }}'
      - '{{ rss_temple__postgres_name }}'
  become: true
  changed_when: true
  when: not _rss_temple__django_user_exists

- name: "Django-Specific: Alter client_encoding to utf8 for '{{ rss_temple__app_postgres_user }}'"
  ansible.builtin.command:
    chdir: '{{ _rss_temple__absolute_service_path }}'
    argv:
      - docker
      - compose
      - exec
      - -e
      - PGPASSWORD={{ _rss_temple__postgres_admin_password | quote }}
      - '{{ rss_temple__app_docker_service_prefix }}postgresql'
      - psql
      - -U
      - '{{ rss_temple__postgres_admin_user }}'
      - -c
      - "ALTER ROLE {{ rss_temple__app_postgres_user }} SET client_encoding TO 'utf8'"
      - '{{ rss_temple__postgres_name }}'
  become: true
  changed_when: true
  when: not _rss_temple__django_user_exists

- name: "Django-Specific: Alter default_transaction_isolation to read committed for '{{ rss_temple__app_postgres_user }}'"
  ansible.builtin.command:
    chdir: '{{ _rss_temple__absolute_service_path }}'
    argv:
      - docker
      - compose
      - exec
      - -e
      - PGPASSWORD={{ _rss_temple__postgres_admin_password | quote }}
      - '{{ rss_temple__app_docker_service_prefix }}postgresql'
      - psql
      - -U
      - '{{ rss_temple__postgres_admin_user }}'
      - -c
      - "ALTER ROLE {{ rss_temple__app_postgres_user }} SET default_transaction_isolation TO 'read committed'"
      - '{{ rss_temple__postgres_name }}'
  become: true
  changed_when: true
  when: not _rss_temple__django_user_exists

- name: "Django-Specific: Alter timezone to UTC for '{{ rss_temple__app_postgres_user }}'"
  ansible.builtin.command:
    chdir: '{{ _rss_temple__absolute_service_path }}'
    argv:
      - docker
      - compose
      - exec
      - -e
      - PGPASSWORD={{ _rss_temple__postgres_admin_password | quote }}
      - '{{ rss_temple__app_docker_service_prefix }}postgresql'
      - psql
      - -U
      - '{{ rss_temple__postgres_admin_user }}'
      - -c
      - "ALTER ROLE {{ rss_temple__app_postgres_user }} SET timezone TO 'UTC'"
      - '{{ rss_temple__postgres_name }}'
  become: true
  changed_when: true
  when: not _rss_temple__django_user_exists
