---
- name: Setup Config (Server)
  hosts: all

  vars_prompt:
    - name: rss_temple__docker_version
      prompt: Docker tag name
      default: latest
      private: false

    - name: rss_temple__postgres_admin_password
      prompt: Postgres Root Password
      default: __rand__
      private: true

    - name: rss_temple__app_postgres_password
      prompt: App Postgres Password
      default: __rand__
      private: true

    - name: rss_temple__app_superuser_email
      prompt: App SuperUser Email
      private: false

    - name: rss_temple__app_superuser_password
      prompt: App SuperUser Password
      default: __rand__
      private: true

    - name: rss_temple__app_secret_key
      prompt: Value for `SECRET_KEY` property of `nabla.settings`
      default: __rand__
      private: true

    - name: rss_temple__app_email_host
      prompt: Email host

    - name: rss_temple__app_email_port
      prompt: Email port
      default: '25'

    - name: rss_temple__app_email_host_user
      prompt: Email host user

    - name: rss_temple__app_email_host_password
      prompt: Email host password
      private: true

    - name: rss_temple__app_email_use_tls
      prompt: Email use TLS
      default: 'true'

    - name: rss_temple__app_email_use_ssl
      prompt: Email use SSL
      default: 'false'

    - name: rss_temple__app_email_timeout
      prompt: Email timeout (seconds)
      default: '10.0'

    - name: rss_temple__app_default_from_email
      prompt: Default FROM email address
      default: noreply@rsstemple.com

    - name: rss_temple__app_site_domain
      prompt: Site domain
      default: rsstemple.com

    - name: rss_temple__app_site_name
      prompt: Site name
      default: RSS Temple

    - name: rss_temple__app_session_cookie_domain
      prompt: Session Cookie Domain
      default: .rsstemple.com

    - name: rss_temple__app_csrf_cookie_domain
      prompt: CSRF Cookie Domain
      default: .rsstemple.com

    - name: rss_temple__app_account_confirm_email_url
      prompt: URL to put in emails for account email verification
      default: http://localhost:4200/verify?token=%(key)s

    - name: rss_temple__app_account_email_verification_sent_url
      prompt: 'Unknown usage: rss_temple__app_account_email_verification_sent_url'
      default: http://localhost:4200/emailsent

    - name: rss_temple__app_password_confirm_reset_url_format
      prompt: |
        Format string of URL to put in emails for password reset requests
        Must contain the `{token}` and `{userId}` format tokens
      default: http://localhost:4200/resetpassword?token=%(token)s&userId=%(userId)s

    - name: rss_temple__app_social_connections_url
      prompt: 'Unknown usage: app_social_connections_url'
      default: http://localhost:4200/main/profile

    - name: rss_temple__app_social_signup_url
      prompt: 'Unknown usage: app_social_signup_url'
      default: http://localhost:4200/register

  pre_tasks:
    - name: Generate Random Passwords and the like
      block:
        - when: rss_temple__postgres_admin_password == '__rand__'
          ansible.builtin.set_fact:
            _rss_temple__postgres_admin_password: "{{ lookup('ansible.builtin.password', '_credentials/' + 'rss_temple__postgres_admin_password.' + inventory_hostname + '.password') }}"  # noqa yaml[line-length]

        - when: rss_temple__postgres_admin_password != '__rand__'
          ansible.builtin.set_fact:
            _rss_temple__postgres_admin_password: "{{ rss_temple__postgres_admin_password }}"

        - when: rss_temple__app_postgres_password == '__rand__'
          ansible.builtin.set_fact:
            _rss_temple__app_postgres_password: "{{ lookup('ansible.builtin.password', '_credentials/' + 'rss_temple__app_postgres_password.' + inventory_hostname + '.password') }}"  # noqa yaml[line-length]

        - when: rss_temple__app_postgres_password != '__rand__'
          ansible.builtin.set_fact:
            _rss_temple__app_postgres_password: "{{ rss_temple__app_postgres_password }}"

        - when: rss_temple__app_superuser_password == '__rand__'
          ansible.builtin.set_fact:
            _rss_temple__app_superuser_password: "{{ lookup('ansible.builtin.password', '_credentials/' + 'rss_temple__app_superuser_password.' + inventory_hostname + '.password') }}"  # noqa yaml[line-length]

        - when: rss_temple__app_superuser_password != '__rand__'
          ansible.builtin.set_fact:
            _rss_temple__app_superuser_password: "{{ rss_temple__app_superuser_password }}"

        - when: rss_temple__app_secret_key == '__rand__'
          ansible.builtin.set_fact:
            _rss_temple__app_secret_key: "{{ lookup('django_secret', '_credentials/' + 'rss_temple__app_secret_key.' + inventory_hostname + '.django_secret') }}"  # noqa yaml[line-length]

        - when: rss_temple__app_secret_key != '__rand__'
          ansible.builtin.set_fact:
            _rss_temple__app_secret_key: "{{ rss_temple__app_secret_key }}"

  tasks:
    - name: Calculate Gunicorn worker count
      when: rss_temple__gunicorn_workers is undefined
      ansible.builtin.set_fact:
        # The number of Gunicorn worker processes for handling requests. See https://docs.gunicorn.org/en/stable/settings.html#workers
        rss_temple__gunicorn_workers: '{{ ansible_processor_cores + 1 }}'

    - name: Calculate Gunicorn thread count
      when: rss_temple__gunicorn_threads is undefined
      ansible.builtin.set_fact:
        # The number of Gunicorn threads for handling requests. See https://docs.gunicorn.org/en/stable/settings.html#threads
        rss_temple__gunicorn_threads: 2

    - ansible.builtin.include_role:
        name: rss_temple
        tasks_from: _absolute_service_path
        public: true

    - name: Validate Variables
      block:
        - ansible.builtin.fail:
            msg: '`rss_temple__app_superuser_email` is malformed'
          when: rss_temple__app_superuser_email and rss_temple__app_superuser_email is not match('^[\w\-\.]+@([\w\-]+\.)+[\w\-]{2,4}$')

    - ansible.builtin.include_role:
        name: rss_temple
        tasks_from: setup_config
